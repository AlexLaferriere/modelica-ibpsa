last-generated=2018-06-18
statistics-fmu-dependencies=
{
  "Derivatives": {
    "der(fan.filter.x[1])": [
      "fan.filter.x[1]"
    ],
    "der(fan.filter.x[2])": [
      "fan.filter.x[1]",
      "fan.filter.x[2]"
    ],
    "der(fan2.filter.x[1])": [
      "fan2.filter.x[1]"
    ],
    "der(fan2.filter.x[2])": [
      "fan2.filter.x[1]",
      "fan2.filter.x[2]"
    ],
    "der(senTemHXOut.T)": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.filter.x[2]",
      "senTemHXOut.T",
      "fan2.filter.x[2]"
    ],
    "der(senTemSupAir.T)": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.filter.x[2]",
      "senTemSupAir.T",
      "fan2.filter.x[2]"
    ]
  },
  "InitialUnknowns": {
    "QGaiLat_flow[1]": [
      "zer[1].k"
    ],
    "QGaiLat_flow[2]": [
      "zer[2].k"
    ],
    "QGaiRad_flow[1]": [
      "zer[1].k"
    ],
    "QGaiRad_flow[2]": [
      "zer[2].k"
    ],
    "QGaiSenCon_flow[1]": [
      "zer[1].k"
    ],
    "QGaiSenCon_flow[2]": [
      "zer[2].k"
    ],
    "TOut": [
      "weaDat.pAtm",
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDryBul.TMin",
      "weaDat.cheTemDryBul.TMax"
    ],
    "cooCoi.CMin_flow_small": [],
    "cooCoi.cp1_default": [],
    "cooCoi.cp2_default": [],
    "der(fan.filter.x[1])": [],
    "der(fan.filter.x[2])": [
      "fan.riseTime",
      "fan.filter.gain",
      "fan.filter.normalized",
      "fan.m_flow_start"
    ],
    "der(fan2.filter.x[1])": [],
    "der(fan2.filter.x[2])": [
      "fan2.riseTime",
      "fan2.filter.gain",
      "fan2.filter.normalized",
      "fan2.m_flow_start"
    ],
    "der(senTemHXOut.T)": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.m_flow_start",
      "senTemHXOut.T_start",
      "weaDat.pAtm",
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDryBul.TMin",
      "weaDat.cheTemDryBul.TMax",
      "fan2.m_flow_start"
    ],
    "der(senTemSupAir.T)": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.m_flow_start",
      "cooCoi.eps",
      "senTemSupAir.T_start",
      "con.bandwidth",
      "con.pre_y_start",
      "mWat_flow.realTrue",
      "weaDat.pAtm",
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDryBul.TMin",
      "weaDat.cheTemDryBul.TMax",
      "fan2.m_flow_start"
    ],
    "fan.eff.hydDer[1]": [],
    "fan.eff.motDer[1]": [],
    "fan.eff.preDer1[1]": [],
    "fan.eff.preDer1[2]": [],
    "fan.eff.preDer2[1]": [],
    "fan.eff.preDer2[2]": [],
    "fan.eff.preDer2[3]": [],
    "fan.eff.preDer3[1]": [],
    "fan.eff.preDer3[2]": [],
    "fan.eff.preDer3[3]": [],
    "fan.eff.preDer3[4]": [],
    "fan.filter.cr[1]": [
      "fan.filter.normalized"
    ],
    "fan.filter.cr[2]": [
      "fan.filter.normalized"
    ],
    "fan.filter.r[1]": [
      "fan.riseTime",
      "fan.filter.normalized"
    ],
    "fan.filter.r[2]": [
      "fan.riseTime",
      "fan.filter.normalized"
    ],
    "fan.filter.x[1]": [
      "fan.riseTime",
      "fan.filter.normalized"
    ],
    "fan.filter.x[2]": [
      "fan.filter.gain",
      "fan.m_flow_start"
    ],
    "fan2.eff.hydDer[1]": [],
    "fan2.eff.motDer[1]": [],
    "fan2.eff.preDer1[1]": [],
    "fan2.eff.preDer1[2]": [],
    "fan2.eff.preDer2[1]": [],
    "fan2.eff.preDer2[2]": [],
    "fan2.eff.preDer2[3]": [],
    "fan2.eff.preDer3[1]": [],
    "fan2.eff.preDer3[2]": [],
    "fan2.eff.preDer3[3]": [],
    "fan2.eff.preDer3[4]": [],
    "fan2.filter.cr[1]": [
      "fan2.filter.normalized"
    ],
    "fan2.filter.cr[2]": [
      "fan2.filter.normalized"
    ],
    "fan2.filter.r[1]": [
      "fan2.riseTime",
      "fan2.filter.normalized"
    ],
    "fan2.filter.r[2]": [
      "fan2.riseTime",
      "fan2.filter.normalized"
    ],
    "fan2.filter.x[1]": [
      "fan2.riseTime",
      "fan2.filter.normalized"
    ],
    "fan2.filter.x[2]": [
      "fan2.filter.gain",
      "fan2.m_flow_start"
    ],
    "fluPor[1,1].forward.T": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.per.hydraulicEfficiency.V_flow[1]",
      "fan.per.hydraulicEfficiency.eta[1]",
      "fan.per.motorEfficiency.V_flow[1]",
      "fan.per.motorEfficiency.eta[1]",
      "fan.per.motorCooledByFluid",
      "fan.m_flow_start",
      "cooCoi.eps",
      "con.bandwidth",
      "con.pre_y_start",
      "mWat_flow.realTrue",
      "weaDat.pAtm",
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDryBul.TMin",
      "weaDat.cheTemDryBul.TMax",
      "fan2.m_flow_start"
    ],
    "fluPor[1,1].forward.X_w": [
      "fluPor[2,1].backward.X_w",
      "fan.m_flow_start",
      "weaDat.pAtm",
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDryBul.TMin",
      "weaDat.cheTemDryBul.TMax"
    ],
    "fluPor[1,1].m_flow": [
      "fan.m_flow_start"
    ],
    "fluPor[1,2].forward.T": [
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[1,2].forward.X_w": [
      "fluPor[2,1].backward.X_w",
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[1,2].m_flow": [
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[1,3].forward.T": [
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[1,3].forward.X_w": [
      "fluPor[2,1].backward.X_w",
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[1,3].m_flow": [
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[2,1].forward.T": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.per.hydraulicEfficiency.V_flow[1]",
      "fan.per.hydraulicEfficiency.eta[1]",
      "fan.per.motorEfficiency.V_flow[1]",
      "fan.per.motorEfficiency.eta[1]",
      "fan.per.motorCooledByFluid",
      "fan.m_flow_start",
      "cooCoi.eps",
      "con.bandwidth",
      "con.pre_y_start",
      "mWat_flow.realTrue",
      "weaDat.pAtm",
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDryBul.TMin",
      "weaDat.cheTemDryBul.TMax",
      "fan2.m_flow_start"
    ],
    "fluPor[2,1].forward.X_w": [
      "fluPor[1,1].backward.X_w",
      "fan.m_flow_start",
      "weaDat.pAtm",
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDryBul.TMin",
      "weaDat.cheTemDryBul.TMax"
    ],
    "fluPor[2,1].m_flow": [
      "fan.m_flow_start"
    ],
    "fluPor[2,2].forward.T": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[2,2].forward.X_w": [
      "fluPor[1,1].backward.X_w",
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[2,2].m_flow": [
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[2,3].forward.T": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[2,3].forward.X_w": [
      "fluPor[1,1].backward.X_w",
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "fluPor[2,3].m_flow": [
      "fan.m_flow_start",
      "fan2.m_flow_start"
    ],
    "hex.CMin_flow_small": [],
    "hex.cp1_default": [],
    "hex.cp2_default": [],
    "senTemHXOut.T": [
      "senTemHXOut.T_start"
    ],
    "senTemSupAir.T": [
      "senTemSupAir.T_start"
    ],
    "weaBus.HDifHor": [
      "weaDat.add.k1",
      "weaDat.add.k2",
      "weaDat.datRea1.verboseRead"
    ],
    "weaBus.HDirNor": [
      "weaDat.add.k1",
      "weaDat.add.k2",
      "weaDat.datRea1.verboseRead"
    ],
    "weaBus.HGloHor": [
      "weaDat.add.k1",
      "weaDat.add.k2",
      "weaDat.datRea1.verboseRead"
    ],
    "weaBus.HHorIR": [
      "weaDat.datRea.verboseRead"
    ],
    "weaBus.TBlaSky": [
      "weaDat.pAtm",
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDryBul.TMin",
      "weaDat.cheTemDryBul.TMax",
      "weaDat.cheTemDewPoi.TMin",
      "weaDat.cheTemDewPoi.TMax",
      "weaDat.cheTemBlaSky.TMin",
      "weaDat.cheTemBlaSky.TMax"
    ],
    "weaBus.TDewPoi": [
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDewPoi.TMin",
      "weaDat.cheTemDewPoi.TMax"
    ],
    "weaBus.TDryBul": [
      "weaDat.pAtm",
      "weaDat.datRea.verboseRead",
      "weaDat.cheTemDryBul.TMin",
      "weaDat.cheTemDryBul.TMax"
    ],
    "weaBus.celHei": [
      "weaDat.datRea.verboseRead"
    ],
    "weaBus.cloTim": [],
    "weaBus.lat": [],
    "weaBus.lon": [],
    "weaBus.nOpa": [
      "weaDat.datRea.verboseRead"
    ],
    "weaBus.nTot": [
      "weaDat.datRea.verboseRead"
    ],
    "weaBus.pAtm": [
      "weaDat.pAtm"
    ],
    "weaBus.relHum": [
      "weaDat.datRea.verboseRead"
    ],
    "weaBus.solAlt": [],
    "weaBus.solDec": [],
    "weaBus.solHouAng": [],
    "weaBus.solTim": [],
    "weaBus.solZen": [],
    "weaBus.winDir": [
      "weaDat.datRea.verboseRead"
    ],
    "weaBus.winSpe": [
      "weaDat.datRea.verboseRead"
    ],
    "weaDat.datRea.tableOnFileRead": [
      "weaDat.datRea.verboseRead"
    ],
    "weaDat.datRea1.tableOnFileRead": [
      "weaDat.datRea1.verboseRead"
    ]
  },
  "Outputs": {
    "QGaiLat_flow[1]": [],
    "QGaiLat_flow[2]": [],
    "QGaiRad_flow[1]": [],
    "QGaiRad_flow[2]": [],
    "QGaiSenCon_flow[1]": [],
    "QGaiSenCon_flow[2]": [],
    "TOut": [],
    "fluPor[1,1].forward.T": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[1,1].forward.X_w": [
      "fluPor[2,1].backward.X_w",
      "fan.filter.x[2]"
    ],
    "fluPor[1,1].m_flow": [
      "fan.filter.x[2]"
    ],
    "fluPor[1,2].forward.T": [
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[1,2].forward.X_w": [
      "fluPor[2,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[1,2].m_flow": [
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[1,3].forward.T": [
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[1,3].forward.X_w": [
      "fluPor[2,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[1,3].m_flow": [
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[2,1].forward.T": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fluPor[2,1].backward.T",
      "fluPor[2,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[2,1].forward.X_w": [
      "fluPor[1,1].backward.X_w",
      "fan.filter.x[2]"
    ],
    "fluPor[2,1].m_flow": [
      "fan.filter.x[2]"
    ],
    "fluPor[2,2].forward.T": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[2,2].forward.X_w": [
      "fluPor[1,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[2,2].m_flow": [
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[2,3].forward.T": [
      "fluPor[1,1].backward.T",
      "fluPor[1,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[2,3].forward.X_w": [
      "fluPor[1,1].backward.X_w",
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "fluPor[2,3].m_flow": [
      "fan.filter.x[2]",
      "fan2.filter.x[2]"
    ],
    "weaBus.HDifHor": [],
    "weaBus.HDirNor": [],
    "weaBus.HGloHor": [],
    "weaBus.HHorIR": [],
    "weaBus.TBlaSky": [],
    "weaBus.TDewPoi": [],
    "weaBus.TDryBul": [],
    "weaBus.celHei": [],
    "weaBus.cloTim": [],
    "weaBus.lat": [],
    "weaBus.lon": [],
    "weaBus.nOpa": [],
    "weaBus.nTot": [],
    "weaBus.pAtm": [],
    "weaBus.relHum": [],
    "weaBus.solAlt": [],
    "weaBus.solDec": [],
    "weaBus.solHouAng": [],
    "weaBus.solTim": [],
    "weaBus.solZen": [],
    "weaBus.winDir": [],
    "weaBus.winSpe": []
  }
}
